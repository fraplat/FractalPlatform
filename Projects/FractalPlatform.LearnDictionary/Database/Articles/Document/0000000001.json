{
  "Articles": [
    {
      "About": "Fractal Platform is a low-code development environment that allows you to create full-featured web applications much faster than traditional coding.",
      "IsLearned": false,
      "Name": "What is Fractal Platform?"
    },
    {
      "About": "Unlike template-based tools, Fractal lets you build fully customized business logic in C# and unique UI designs using Figma or HTML.",
      "IsLearned": false,
      "Name": "How is Fractal different from other low-code tools like Bubble or Wix?"
    },
    {
      "About": "You can use your own unique design — either by importing layouts from Figma or writing custom HTML/CSS.",
      "IsLearned": false,
      "Name": "Can I use my own design or do I have to use templates?"
    },
    {
      "About": "You can build everything from simple data processing tools or websites to advanced business applications and CRMs.",
      "IsLearned": false,
      "Name": "What kind of projects can be built with Fractal?"
    },
    {
      "About": "Fractal is open and flexible — you can write your own backend code, JS components, and integrate external APIs.",
      "IsLearned": false,
      "Name": "Is it a closed ecosystem or can I use my own code?"
    },
    {
      "About": "No vendor lock-in — your source code and database schemas are stored in Git, and you can host anywhere.",
      "IsLearned": false,
      "Name": "Is there a vendor lock-in?"
    },
    {
      "About": "Fractal uses C# for backend logic, JavaScript for UI components, and HTML/CSS for front-end design.",
      "IsLearned": false,
      "Name": "What programming languages does Fractal use?"
    },
    {
      "About": "You can deploy on Fractal’s sandbox servers or host on your own AWS or Azure Docker containers.",
      "IsLearned": false,
      "Name": "Can I host my application anywhere I want?"
    },
    {
      "About": "Fractal supports enterprise-scale projects with caching, microservices, and multiple data models.",
      "IsLearned": false,
      "Name": "Is Fractal suitable for large projects?"
    },
    {
      "About": "The core platform is proprietary, but your application code and design are fully accessible via Git.",
      "IsLearned": false,
      "Name": "Is it open-source or proprietary?"
    },
    {
      "About": "The UI is autogenerated from your data model in JSON and can be customized with 37+ UI controls or custom HTML/JS.",
      "IsLearned": false,
      "Name": "How does Fractal generate UI?"
    },
    {
      "About": "Fractal supports document-oriented, MS SQL, and PostgreSQL databases.",
      "IsLearned": false,
      "Name": "What databases are supported?"
    },
    {
      "About": "You can combine document, key-value, and relational data models in one solution.",
      "IsLearned": false,
      "Name": "Can I combine multiple data sources?"
    },
    {
      "About": "Business logic is written in C# with full debugging and AOP pattern support.",
      "IsLearned": false,
      "Name": "How can I implement business logic?"
    },
    {
      "About": "You can easily connect and use any external APIs or services via REST endpoints.",
      "IsLearned": false,
      "Name": "Can I use APIs or integrate third-party services?"
    },
    {
      "About": "Development speed is typically 10–100 times faster than traditional frameworks.",
      "IsLearned": false,
      "Name": "How fast is development compared to traditional frameworks?"
    },
    {
      "About": "Fractal includes an integrated auto-testing framework to create and run test scenarios.",
      "IsLearned": false,
      "Name": "Does Fractal support testing?"
    },
    {
      "About": "Yes, everything including code, design, and database schemas is stored in Git repositories.",
      "IsLearned": false,
      "Name": "Does it support Git version control?"
    },
    {
      "About": "You can work in the browser with Fractal Studio or in Visual Studio .NET on desktop.",
      "IsLearned": false,
      "Name": "What IDEs or tools can I use?"
    },
    {
      "About": "You can debug code with breakpoints and quick watch using Visual Studio.",
      "IsLearned": false,
      "Name": "How can I debug my code?"
    },
    {
      "About": "You can generate UI from a database model, adjust it visually, or import from Figma.",
      "IsLearned": false,
      "Name": "Can I build my UI visually?"
    },
    {
      "About": "You can create custom UI components in JavaScript and reuse them across your project.",
      "IsLearned": false,
      "Name": "What if I need a specific custom UI component?"
    },
    {
      "About": "Yes, Fractal offers many ready-to-go templates to speed up your work.",
      "IsLearned": false,
      "Name": "Does Fractal have prebuilt templates?"
    },
    {
      "About": "You can reuse and combine existing features from other applications easily.",
      "IsLearned": false,
      "Name": "Can I copy functionality from other projects?"
    },
    {
      "About": "Frontend and backend work as a unified reactive system sharing one cache.",
      "IsLearned": false,
      "Name": "Does the frontend and backend work separately?"
    },
    {
      "About": "Fractal apps can respond in as low as 14–18 ms even for dynamic pages.",
      "IsLearned": false,
      "Name": "How fast are Fractal apps?"
    },
    {
      "About": "You can host apps on AWS, Azure, or any Docker-compatible environment.",
      "IsLearned": false,
      "Name": "What kind of hosting do I need?"
    },
    {
      "About": "Fractal supports microservices and can scale horizontally with traffic growth.",
      "IsLearned": false,
      "Name": "Can I scale the app if I get more users?"
    },
    {
      "About": "Hosting reliability depends on your provider like AWS or Azure; Fractal is stateless and scalable.",
      "IsLearned": false,
      "Name": "How reliable is the hosting?"
    },
    {
      "About": "No special setup required — any Docker environment works fine.",
      "IsLearned": false,
      "Name": "Does Fractal require a specific server setup?"
    },
    {
      "About": "You can manage authentication, roles, and separate internal and external interfaces.",
      "IsLearned": false,
      "Name": "Is user authentication supported?"
    },
    {
      "About": "Data can be stored in your own databases with full encryption and access control.",
      "IsLearned": false,
      "Name": "How is data security handled?"
    },
    {
      "About": "You can configure automatic backups via AWS/Azure snapshots or scripts.",
      "IsLearned": false,
      "Name": "Are there automated backups?"
    },
    {
      "About": "Updates are deployed through Git and CI/CD pipelines with Docker containers.",
      "IsLearned": false,
      "Name": "How are updates deployed?"
    },
    {
      "About": "Logging, monitoring, and analytics are built-in or can be integrated externally.",
      "IsLearned": false,
      "Name": "Does Fractal handle error logging and monitoring?"
    },
    {
      "About": "Fractal development is 10–100 times faster than traditional coding.",
      "IsLearned": false,
      "Name": "How much faster is development compared to traditional coding?"
    },
    {
      "About": "You get full customization freedom, not limited by templates or logic restrictions.",
      "IsLearned": false,
      "Name": "How much customization can I achieve compared to template builders?"
    },
    {
      "About": "You can transform Excel or Google Form processes into full web apps in similar time.",
      "IsLearned": false,
      "Name": "Can it replace my Excel-based workflows?"
    },
    {
      "About": "Fractal supports enterprise systems with caching, data distribution, and modularity.",
      "IsLearned": false,
      "Name": "Can Fractal handle complex enterprise requirements?"
    },
    {
      "About": "Startups can build MVPs in days, not months, with minimal cost and fast scaling.",
      "IsLearned": false,
      "Name": "What’s the main advantage for startups or small businesses?"
    },
    {
      "About": "Developers collaborate through Git and Fractal Portal for story tracking and deployments.",
      "IsLearned": false,
      "Name": "How do developers work together in Fractal?"
    },
    {
      "About": "Non-developers can use Fractal for simple tools, but C# is needed for complex logic.",
      "IsLearned": false,
      "Name": "Can non-developers use Fractal?"
    },
    {
      "About": "You can import existing databases and adapt your logic to C# modules.",
      "IsLearned": false,
      "Name": "Can I migrate an existing project into Fractal?"
    },
    {
      "About": "Yes, you own all source code and can continue development independently.",
      "IsLearned": false,
      "Name": "Can I export my code if I decide to move away from Fractal?"
    },
    {
      "About": "Fractal Studio is a browser-based IDE for building, testing, and deploying apps.",
      "IsLearned": false,
      "Name": "What is Fractal Studio?"
    },
    {
      "About": "Fractal Portal is a hub for project tracking, documentation, and deployment management.",
      "IsLearned": false,
      "Name": "What is Fractal Portal?"
    },
    {
      "About": "Fractal supports CI/CD through Git and Docker pipelines for automatic deployment.",
      "IsLearned": false,
      "Name": "Does Fractal support CI/CD integration?"
    },
    {
      "About": "WordPress is for content sites, Fractal is for complex business logic and structured data apps.",
      "IsLearned": false,
      "Name": "How does Fractal compare to WordPress?"
    },
    {
      "About": "Bubble is visual but limited in backend control, while Fractal offers full C# and Git flexibility.",
      "IsLearned": false,
      "Name": "How does it compare to Bubble?"
    },
    {
      "About": "You can integrate AI tools or APIs and even use AI to generate your HTML designs.",
      "IsLearned": false,
      "Name": "Can Fractal integrate with AI tools or APIs?"
    }
  ]
}